/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
/**
 *  Covarrubias Solís Víctor Alfonso – 177294
    Puente Sánchez Erick Emmanuel – 174662
 * 
 */
public class ModificacionusuariosAdmin extends javax.swing.JFrame {

    Connection con;
    static String correo;
    static String telefono;
    
    public ModificacionusuariosAdmin(Connection c) throws SQLException {//recibe la conexion a la base de datos
        con = c;
        this.setTitle("Modificacion de datos de usuarios");
        this.setResizable(false);//para que no se pueda cambiar el tamaño
        this.setVisible(true);//mostrar la ventana
        initComponents();
        rellenarcombo();
        //se desactiva todo
        //cliente
        jComboBox1.setEnabled(false);
        txtpcliente.setEnabled(false);
        txtncliente.setEnabled(false);
        txtccliente.setEnabled(false);
        txttcliente.setEnabled(false);
        txtdcliente.setEnabled(false);
        
        //admin
        jComboBox2.setEnabled(false);
        txtpadmin.setEnabled(false);
        txtcaadmin.setEnabled(false);
        txtsaadmin.setEnabled(false);
        txtnadmin.setEnabled(false);
        txtcoadmin.setEnabled(false);
        txttadmin.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new Fondo();
        jLabel1 = new javax.swing.JLabel();
        Admin = new javax.swing.JRadioButton();
        Cliente = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtpadmin = new javax.swing.JTextField();
        txtncliente = new javax.swing.JTextField();
        txtccliente = new javax.swing.JTextField();
        txttcliente = new javax.swing.JTextField();
        txtdcliente = new javax.swing.JTextField();
        txtpcliente = new javax.swing.JTextField();
        txtcaadmin = new javax.swing.JTextField();
        txtnadmin = new javax.swing.JTextField();
        txtcoadmin = new javax.swing.JTextField();
        txttadmin = new javax.swing.JTextField();
        Modificar1 = new javax.swing.JButton();
        Menu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtsaadmin = new javax.swing.JTextField();
        Clientes = new javax.swing.JButton();
        Admins = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 800));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Modificar datos de usuarios");

        Admin.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(Admin);
        Admin.setForeground(new java.awt.Color(255, 255, 255));
        Admin.setText("Administrador");
        Admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminActionPerformed(evt);
            }
        });

        Cliente.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(Cliente);
        Cliente.setForeground(new java.awt.Color(255, 255, 255));
        Cliente.setText("Cliente");
        Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClienteActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Usuario a modificar");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Password");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("cargo");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Usuario a modificar");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Password");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Correo");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Telefono");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Direccion");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Correo");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Telefono");

        Modificar1.setText("Modificar");
        Modificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modificar1ActionPerformed(evt);
            }
        });

        Menu.setText("Menu");
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Salario");

        Clientes.setText("Consultar clientes");
        Clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientesActionPerformed(evt);
            }
        });

        Admins.setText("Consultar administradores");
        Admins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Menu)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel6))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtdcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtccliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtncliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtpcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(Clientes)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel2))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txttadmin)
                                            .addComponent(txtcoadmin)
                                            .addComponent(txtnadmin)
                                            .addComponent(txtcaadmin)
                                            .addComponent(txtpadmin)
                                            .addComponent(txtsaadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addComponent(Admins)))
                        .addGap(129, 129, 129))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Admin)
                        .addGap(238, 238, 238))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(461, 461, 461)
                        .addComponent(Modificar1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Admin)
                    .addComponent(Cliente))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(txtpadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtncliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcaadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtccliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtsaadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txttcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtdcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtnadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtcoadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txttadmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Admins)
                    .addComponent(Clientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(Modificar1)
                .addGap(9, 9, 9)
                .addComponent(Menu)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void rellenarcombo(){
        Statement s;
        ResultSet rs;  
        try{
            s = con.createStatement();//se crea un statement sql
            String tablausers= ("SELECT * FROM users");
            rs= s.executeQuery(tablausers);
            
            while(rs.next()){
                jComboBox1.addItem(rs.getString("user"));
            }
            
            s = con.createStatement();//se crea un statement sql
            String tablaadmins= ("SELECT * FROM admins");
            rs= s.executeQuery(tablaadmins);
            
            while(rs.next()){
                jComboBox2.addItem(rs.getString("user"));
            }
        }catch(SQLException e){
            System.out.println("Error: "+e);
        }
    }
    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
        try {
            new MenuAdmins(con).setVisible(true);
        }catch(SQLException e) {
            System.out.println("Error"+e);
        }
        this.dispose();
    }//GEN-LAST:event_MenuActionPerformed

    private void Modificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modificar1ActionPerformed
        if(Cliente.isSelected()){//si se selecciona cliente
            int cont=0;//para saber si se repitio el correo
            int cont2=0;//para saber si se repitio el telefono
            //excepciones propias
            try{
                Corroborar.validarnombre(txtncliente.getText());
            }catch(Exception e) {
                System.out.println(e);
                txtncliente.setText("");
            }
            try {
                Corroborar.validartelefono(txttcliente.getText());
            }catch(Exception e) {
                System.out.println(e);
                txttcliente.setText("");
            }
            try {
                Corroborar.validarcorreo(txtccliente.getText());
            }catch(Exception e) {
                System.out.println(e);
                txtccliente.setText("");
            }
            try{//se checa que todos los text fields esten llenos
                if(txtpcliente.getText().equals("")||txtncliente.getText().equals("")||txtccliente.getText().equals("")||txttcliente.getText().equals("")||txtdcliente.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Faltan datos por llenar", "ALERTA", JOptionPane.INFORMATION_MESSAGE);
                }else{//si estan todos los datos
                    Statement s = con.createStatement();//se crea un statement sql
                    String tablausers= ("Select * from users");
                    s.execute(tablausers);
                    ResultSet rs = s.getResultSet();//se guarda el resultado y despues se recorre

                    while(rs.next()){//se va recorriendo la tabla users
                        if(rs.getString("user").equals(jComboBox1.getSelectedItem().toString())){
                            //se guardan los datos que tiene antes de la modificacion
                            correo=rs.getString("correo");
                            telefono=rs.getString("telefono");
                        }
                    }
                    //si otro usuario tiene el mismo usuario, correo o telefono no se hara el registro
                    while(rs.next()){//se va recorriendo la tabla users
                        if((rs.getString("correo").equals(txtccliente.getText()))){
                            if(rs.getString("correo")!=correo){
                                cont++;//si se repite y no es el que tenia antes el usuario significa que es uno que ya ocupa otra persona
                            }
                        }
                        if((rs.getString("telefono").equals(txttcliente.getText()))){
                            if(rs.getString("telefono")!=telefono){
                                cont2++;//si se repite y no es el que tenia antes el usuario significa que es uno que ya ocupa otra persona
                            }
                        }
                    }
                    if(cont>0){//si un dato se repitio
                        JOptionPane.showMessageDialog(null, "correo ya existente.\nIntente de nuevo con otro.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                        //se limpia el text field
                        txtccliente.setText("");
                    }else{//si no hay datos ya usados, se hace el registro
                        if(cont2>0){
                            JOptionPane.showMessageDialog(null, "telefono ya existente.\nIntente de nuevo con otro.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            //se limpia el text field
                            txttcliente.setText("");
                        }else{
                            Statement s2 = con.createStatement();//se crea un statement sql
                            String datosmodificados= ("UPDATE users SET pasword = '"+txtpcliente.getText()+"',"+"nombre= '"+txtncliente.getText()+"',"+"correo= '"+txtccliente.getText()+"',"+"telefono='"+txttcliente.getText()+"',"+"direccion='"+txtdcliente.getText()+"' WHERE user='"+jComboBox1.getSelectedItem().toString()+"'");
                            s2.executeUpdate(datosmodificados);//se modifican los datos
                            JOptionPane.showMessageDialog(null, "Modificado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            //se limpian los campos de los textfields
                            txtpcliente.setText("");
                            txtncliente.setText("");
                            txtccliente.setText("");
                            txttcliente.setText("");
                            txtdcliente.setText("");
                            //se inicializan
                            correo="";
                            telefono="";
                        }
                    }
                }
            }catch(SQLException e){
                System.out.println("Error: "+e);
            }
        }
        if(Admin.isSelected()){//si se selecciona admin
            int cont=0;//para saber si se repitio el correo
            int cont2=0;//para saber si se repitio el telefono
            //excepciones propias
            try{
                Corroborar.validarnombre(txtnadmin.getText());
            }catch(Exception e) {
                System.out.println(e);
                txtnadmin.setText("");
            }
            try {
                Corroborar.validartelefono(txttadmin.getText());
            }catch(Exception e) {
                System.out.println(e);
                txttadmin.setText("");
            }
            try {
                Corroborar.validarcorreo(txtcoadmin.getText());
            }catch(Exception e) {
                System.out.println(e);
                txtcoadmin.setText("");
            }
            try{//se checa que todos los text fields esten llenos
                if(txtpadmin.getText().equals("")||txtcaadmin.getText().equals("")||txtsaadmin.getText().equals("")||txtnadmin.getText().equals("")||txtcoadmin.getText().equals("") || txttadmin.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Faltan datos por llenar", "ALERTA", JOptionPane.INFORMATION_MESSAGE);
                }else{//si estan todos los datos
                    Statement s = con.createStatement();//se crea un statement sql
                    String tablaadmins= ("Select * from admins");
                    s.execute(tablaadmins);
                    ResultSet rs = s.getResultSet();//se guarda el resultado y despues se recorre

                    while(rs.next()){//se va recorriendo la tabla users
                        if(rs.getString("user").equals(jComboBox2.getSelectedItem().toString())){
                            //se guardan los datos que tiene antes de la modificacion
                            correo=rs.getString("correo");
                            telefono=rs.getString("telefono");
                        }
                    }
                    //si otro usuario tiene el mismo usuario, correo o telefono no se hara el registro
                    while(rs.next()){//se va recorriendo la tabla users
                        if((rs.getString("correo").equals(txtcoadmin.getText()))){
                            if(rs.getString("correo")!=correo){
                                cont++;//si se repite y no es el que tenia antes el usuario significa que es uno que ya ocupa otra persona
                            }
                        }
                        if((rs.getString("telefono").equals(txttadmin.getText()))){
                            if(rs.getString("telefono")!=telefono){
                                cont2++;//si se repite y no es el que tenia antes el usuario significa que es uno que ya ocupa otra persona
                            }
                        }
                    }
                    if(cont>0){//si un dato se repitio
                        JOptionPane.showMessageDialog(null, "correo ya existente.\nIntente de nuevo con otro.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                        //se limpia el text field
                        txtcoadmin.setText("");
                    }else{//si no hay datos ya usados, se hace el registro
                        if(cont2>0){
                            JOptionPane.showMessageDialog(null, "telefono ya existente.\nIntente de nuevo con otro.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            //se limpia el text field
                            txttadmin.setText("");
                        }else{
                            float salario = Float.parseFloat(txtsaadmin.getText());
                            Statement s2 = con.createStatement();//se crea un statement sql
                            String datosmodificados= ("UPDATE admins SET pasword = '"+txtpadmin.getText()+"',"+"cargo= '"+txtcaadmin.getText()+"',"+"salario= '"+salario+"',"+"nombre= '"+txtnadmin.getText()+"',"+"correo= '"+txtcoadmin.getText()+"',"+"telefono='"+txttadmin.getText()+"' WHERE user='"+jComboBox2.getSelectedItem().toString()+"'");
                            s2.executeUpdate(datosmodificados);//se modifican los datos
                            JOptionPane.showMessageDialog(null, "Modificado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                            //se limpian los campos de los textfields
                            txtpadmin.setText("");
                            txtcaadmin.setText("");
                            txtsaadmin.setText("");
                            txtnadmin.setText("");
                            txtcoadmin.setText("");
                            txttadmin.setText("");
                            //se inicializan
                            correo="";
                            telefono="";
                        }
                    }
                }
            }catch(SQLException e){
                System.out.println("Error: "+e);
            }
        }
    }//GEN-LAST:event_Modificar1ActionPerformed

    private void ClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientesActionPerformed
        try {
            new ConsultaUsers(con).setVisible(true);
        }catch(SQLException e) {
            System.out.println("Error"+e);
        }
        this.dispose();
    }//GEN-LAST:event_ClientesActionPerformed

    private void AdminsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminsActionPerformed
        try {
            new ConsultaAdmins(con).setVisible(true);
        }catch(SQLException e) {
            System.out.println("Error"+e);
        }
        this.dispose();
    }//GEN-LAST:event_AdminsActionPerformed

    private void ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClienteActionPerformed
        //cliente
        jComboBox1.setEnabled(true);
        txtpcliente.setEnabled(true);
        txtncliente.setEnabled(true);
        txtccliente.setEnabled(true);
        txttcliente.setEnabled(true);
        txtdcliente.setEnabled(true);
        
        //admin
        jComboBox2.setEnabled(false);
        txtpadmin.setEnabled(false);
        txtcaadmin.setEnabled(false);
        txtsaadmin.setEnabled(false);
        txtnadmin.setEnabled(false);
        txtcoadmin.setEnabled(false);
        txttadmin.setEnabled(false);
    }//GEN-LAST:event_ClienteActionPerformed

    private void AdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminActionPerformed
        //cliente
        jComboBox1.setEnabled(false);
        txtpcliente.setEnabled(false);
        txtncliente.setEnabled(false);
        txtccliente.setEnabled(false);
        txttcliente.setEnabled(false);
        txtdcliente.setEnabled(false);
        
        //admin
        jComboBox2.setEnabled(true);
        txtpadmin.setEnabled(true);
        txtcaadmin.setEnabled(true);
        txtsaadmin.setEnabled(true);
        txtnadmin.setEnabled(true);
        txtcoadmin.setEnabled(true);
        txttadmin.setEnabled(true);
    }//GEN-LAST:event_AdminActionPerformed

    class Fondo extends javax.swing.JPanel{//funcion creada para que se cambie el fondo del panel
        private java.awt.Image imagen;//se crea una variable para la imagen del fondo
        @Override//viene de JFrame por eso se sobreescribio
        public void paint(java.awt.Graphics g){//funcion que recibe graficos y sirve para cambiar fondos
            imagen = new javax.swing.ImageIcon(getClass().getResource("/imagenes/RegisProducto.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);//se dibuja la imagen
            setOpaque(false);
            super.paint(g);//se usa el metodo de la clase padre con super
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Admin;
    private javax.swing.JButton Admins;
    private javax.swing.JRadioButton Cliente;
    private javax.swing.JButton Clientes;
    private javax.swing.JButton Menu;
    private javax.swing.JButton Modificar1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtcaadmin;
    private javax.swing.JTextField txtccliente;
    private javax.swing.JTextField txtcoadmin;
    private javax.swing.JTextField txtdcliente;
    private javax.swing.JTextField txtnadmin;
    private javax.swing.JTextField txtncliente;
    private javax.swing.JTextField txtpadmin;
    private javax.swing.JTextField txtpcliente;
    private javax.swing.JTextField txtsaadmin;
    private javax.swing.JTextField txttadmin;
    private javax.swing.JTextField txttcliente;
    // End of variables declaration//GEN-END:variables
}
